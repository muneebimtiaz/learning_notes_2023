Selector	Example		Example description
::after		p::after	Insert something after the content of each <p> element
::before	p::before	Insert something before the content of each <p> element
::first-letter	p::first-letter	Selects the first letter of each <p> element
::first-line	p::first-line	Selects the first line of each <p> element
::marker	::marker	Selects the markers of list items
::selection	p::selection	Selects the portion of an element that is selected by a user

diff b/w pseudo classes and elements
I see where the confusion might be coming from. Let me clarify:

Pseudo-classes: Pseudo-classes are used to select elements based on their state or position within the document. They typically target elements, not classes. Examples of pseudo-classes include :hover, :first-child, :nth-child(), and :not().

Pseudo-elements: Pseudo-elements, like ::before and ::after, are used to style the content of elements. They create virtual elements within an element and style them. You can select elements and then apply pseudo-elements to style their content. You can use classes to select elements, but pseudo-elements themselves are applied to elements, not classes.

Here's an example to illustrate:

css
Copy code
/* Pseudo-class: Select all <a> elements that are being hovered over */
a:hover {
  color: red;
}

/* Pseudo-element: Add a star before <p> elements with the class "intro" */
.intro::before {
  content: "â˜…";
}
In this example, :hover is a pseudo-class targeting <a> elements, and ::before is a pseudo-element styling content before <p> elements with the class "intro." Both are used to style elements, but one selects based on state (hovered), and the other creates and styles content.